openapi: 3.1.0
info:
  title: dolus
  version: '1.0'
servers:
  - url: 'http://localhost:1080'
paths:
  /v1/dolus/expectations:
    get:
      summary: Get expectations
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expectations'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      operationId: getExpectations
      description: Endpoint is for fetching expectations
      parameters:
        - $ref: '#/components/parameters/ExpectationTypeParameter'
        - $ref: '#/components/parameters/PathParameter'
        - $ref: '#/components/parameters/MethodParameter'
    post:
      summary: Create an expectation
      operationId: createExpectation
      responses:
        '201':
          description: Created
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expectation'
              x-examples:
                Example 1:
                  priority: 0
                  request:
                    path: /store/order/2
                    method: GET
                    body: null
                  response:
                    body:
                      complete: true
                      petId:
                        id:
                          $dolus:
                            task: GenInt32
                          max: 10
                          min: 0
                      status: good day
                    status: 200
                  callback: null
  /v1/dolus/routes:
    get:
      summary: Get all the mock server routes
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route'
      operationId: getRoutes
  /v1/dolus/logs:
    get:
      summary: Get the mock server logs
      tags: []
      responses: {}
      operationId: getLogs
      parameters:
        - schema:
            type: integer
          in: query
          name: lines
          description: number of log lines to return
    parameters: []
components:
  schemas:
    Expectation:
      type: object
      x-examples:
        Example 1:
          priority: 0
          request:
            path: /store/order/2
            method: GET
            body: null
          response:
            body:
              complete: true
              petId:
                id:
                  $dolus:
                    task: GenInt32
                  max: 10
                  min: 0
              status: good day
            status: 200
          callback: null
      properties:
        priority:
          type: integer
        request:
          $ref: '#/components/schemas/Request'
        response:
          $ref: '#/components/schemas/Response'
        callback:
          $ref: '#/components/schemas/Callback'
      required:
        - priority
        - request
        - response
    Callback:
      title: Callback
      type: object
      properties:
        httpMethod:
          type: string
        requestBody:
          type: object
        url:
          type: string
        timeout:
          type: integer
      required:
        - httpMethod
        - url
        - timeout
    Request:
      title: Request
      type: object
      properties:
        path:
          type: string
        method:
          type: string
        body:
          type: object
      required:
        - path
        - method
    Response:
      title: Response
      type: object
      properties:
        status:
          type: integer
        body:
          type: object
      required:
        - status
    Expectations:
      title: Expectations
      type: object
      properties:
        expectations:
          type: array
          items:
            $ref: '#/components/schemas/Expectation'
      required:
        - expectations
    Route:
      title: Route
      type: object
      properties:
        path:
          type: string
        operation:
          type: string
      required:
        - path
        - operation
    BadRequest:
      $ref: '#/components/schemas/ErrorResponseBody'
    InternalServerError:
      $ref: '#/components/schemas/ErrorResponseBody'
    ErrorResponseBody:
      title: ErrorResponseBody
      type: object
      required:
        - message
      properties:
        message:
          type: string
  parameters:
    ExpectationTypeParameter:
      name: expectationType
      in: query
      schema:
        type: string
        enum:
          - ALL
          - DEFAULT
          - CUSTOM
      description: The type of expectation to return
    PathParameter:
      name: path
      in: query
      required: false
      schema:
        type: string
      description: The path of the expectation
    MethodParameter:
      name: method
      in: query
      schema:
        type: string
        enum:
          - GET
          - POST
          - HEAD
          - PUT
          - PATCH
          - TRACE
          - CONNECT
          - OPTIONS
          - DELETE
      description: The http method of the expectation
